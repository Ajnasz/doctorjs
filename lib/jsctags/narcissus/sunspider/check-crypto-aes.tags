!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
AESDecryptCtr	check-crypto-aes.js	/^function AESDecryptCtr(ciphertext, password, nBits) {$/;"	f	type:string function(string, string, number)
AESEncryptCtr	check-crypto-aes.js	/^function AESEncryptCtr(plaintext, password, nBits) {$/;"	f	type:string function(string, string, number)
AddRoundKey	check-crypto-aes.js	/^function AddRoundKey(state, w, rnd, Nb) {  \/\/ xor Round Key into state S [§5.1.4]$/;"	f	type:Array[Array[number]] function(Array[Array[number]], Array, number, number)
Cipher	check-crypto-aes.js	/^function Cipher(input, w) {    \/\/ main Cipher function [§5.1]$/;"	f	type:Array function(Array[number], Array)
KeyExpansion	check-crypto-aes.js	/^function KeyExpansion(key) {  \/\/ generate Key Schedule (byte-array Nr+1 x Nb) from Key [§5.2]$/;"	f	type:Array function(<Array | Array[number]>)
MixColumns	check-crypto-aes.js	/^function MixColumns(s, Nb) {   \/\/ combine bytes of each col of state S [§5.1.3]$/;"	f	type:Array[Array[number]] function(Array[Array[number]], number)
RotWord	check-crypto-aes.js	/^function RotWord(w) {    \/\/ rotate 4-byte word w left by one byte$/;"	f	type:Array function(Array)
ShiftRows	check-crypto-aes.js	/^function ShiftRows(s, Nb) {    \/\/ shift row r of state S left by r bytes [§5.1.2]$/;"	f	type:Array[Array[number]] function(Array[Array[number]], number)
SubBytes	check-crypto-aes.js	/^function SubBytes(s, Nb) {    \/\/ apply SBox to state S [§5.1.1]$/;"	f	type:Array[Array[number]] function(Array[Array[number]], number)
SubWord	check-crypto-aes.js	/^function SubWord(w) {    \/\/ apply SBox to 4-byte word w$/;"	f	type:Array function(Array)
byteArrayToHexStr	check-crypto-aes.js	/^function byteArrayToHexStr(b) {  \/\/ convert byte array to hex string for displaying test vectors$/;"	f	type:string function(any)
decodeBase64	check-crypto-aes.js	/^function decodeBase64(str) {$/;"	f	type:<number | string> function(any)
decodeUTF8	check-crypto-aes.js	/^function decodeUTF8(str) {  \/\/ decode utf-8 encoded string back into multi-byte characters$/;"	f	type:<number | string> function(<number | string>)
encodeBase64	check-crypto-aes.js	/^function encodeBase64(str) {  \/\/ http:\/\/tools.ietf.org\/html\/rfc4648$/;"	f	type:string function(any)
encodeUTF8	check-crypto-aes.js	/^function encodeUTF8(str) {  \/\/ encode multi-byte string into utf-8 multiple single-byte characters $/;"	f	type:any function(any)
escCtrlChars	check-crypto-aes.js	/^function escCtrlChars(str) {  \/\/ escape control chars which might cause problems handling ciphertext$/;"	f	type:any function(<number | string>)
unescCtrlChars	check-crypto-aes.js	/^function unescCtrlChars(str) {  \/\/ unescape potentially problematic control characters$/;"	f	type:any function(undefined)
