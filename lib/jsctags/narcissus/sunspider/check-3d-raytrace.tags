!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
%anonymous_function	check-3d-raytrace.js	/^    var floorShader = function(tri, pos, view) {$/;"	f	type:undefined function(<undefined | Triangle>, Array, Array)
%anonymous_function	check-3d-raytrace.js	/^Camera.prototype.generateRayPair = function(y) {$/;"	f	type:undefined function(number)
%anonymous_function	check-3d-raytrace.js	/^Camera.prototype.render = function(scene, pixels, width, height) {$/;"	f	type:undefined function(Scene, Array, number, number)
%anonymous_function	check-3d-raytrace.js	/^Scene.prototype.blocked = function(O, D, far) {$/;"	f	type:boolean function(Array, Array, <number | undefined>)
%anonymous_function	check-3d-raytrace.js	/^Scene.prototype.intersect = function(origin, dir, near, far) {$/;"	f	type:<undefined | Array> function(Array, Array, <number | undefined>, <number | undefined>)
%anonymous_function	check-3d-raytrace.js	/^Triangle.prototype.intersect = function(orig, dir, near, far) {$/;"	f	type:<number | undefined> function(Array, Array, <number | undefined>, <number | undefined>)
Camera	check-3d-raytrace.js	/^function Camera(origin, lookat, up) {$/;"	f	type:Camera function(Array, Array, Array)
Scene	check-3d-raytrace.js	/^function Scene(a_triangles) {$/;"	f	type:Scene function(Array)
Triangle	check-3d-raytrace.js	/^function Triangle(p1, p2, p3) {$/;"	f	type:Triangle function(Array, Array, Array)
add	check-3d-raytrace.js	/^function add(v1, v2) {$/;"	f	type:Array function(Array, Array)
addVector	check-3d-raytrace.js	/^function addVector(self, v) {$/;"	f	type:Array function(Array, <undefined | Array>)
arrayToCanvasCommands	check-3d-raytrace.js	/^function arrayToCanvasCommands(pixels)$/;"	f	type:string function(Array)
createVector	check-3d-raytrace.js	/^function createVector(x,y,z) {$/;"	f	type:Array function(number, number, number)
cross	check-3d-raytrace.js	/^function cross(v1, v2) {$/;"	f	type:Array function(Array, Array)
dot	check-3d-raytrace.js	/^function dot(v1, v2) {$/;"	f	type:number function(Array, Array)
invertMatrix	check-3d-raytrace.js	/^function invertMatrix(self) {$/;"	f	type:Array function(Array)
lengthVector	check-3d-raytrace.js	/^function lengthVector(self) {$/;"	f	type:undefined function(Array)
normalise	check-3d-raytrace.js	/^function normalise(v) {$/;"	f	type:Array function(Array)
normaliseVector	check-3d-raytrace.js	/^function normaliseVector(self) {$/;"	f	type:Array function(Array)
raytraceScene	check-3d-raytrace.js	/^function raytraceScene()$/;"	f	type:Array function()
renderRows	check-3d-raytrace.js	/^function renderRows(camera, scene, pixels, width, height, starty, stopy) {$/;"	f	type:undefined function(Camera, Scene, Array, number, number, number, number)
scale	check-3d-raytrace.js	/^function scale(v, scale) {$/;"	f	type:Array function(<undefined | Array>, <number | undefined>)
scaleVector	check-3d-raytrace.js	/^function scaleVector(self, scale) {$/;"	f	type:<undefined | Array> function(<undefined | Array>, <number | undefined>)
scalev	check-3d-raytrace.js	/^function scalev(v1, v2) {$/;"	f	type:Array function(Array, <undefined | Array>)
sqrLengthVector	check-3d-raytrace.js	/^function sqrLengthVector(self) {$/;"	f	type:number function(any)
sub	check-3d-raytrace.js	/^function sub(v1, v2) {$/;"	f	type:Array function(<undefined | Array>, Array)
subVector	check-3d-raytrace.js	/^function subVector(self, v) {$/;"	f	type:Array function(Array, Array)
transformMatrix	check-3d-raytrace.js	/^function transformMatrix(self, v) {$/;"	f	type:Array function(Array, Array)
