!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
Background	raytrace-inlined.js	/^Flog.RayTracer.Background = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:573	type:Background function()
BaseMaterial	raytrace-inlined.js	/^Flog.RayTracer.Material.BaseMaterial = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:308	type:BaseMaterial function()
Camera	raytrace-inlined.js	/^Flog.RayTracer.Camera = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:529	type:Camera function()
Chessboard	raytrace-inlined.js	/^Flog.RayTracer.Material.Chessboard = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:366	type:Chessboard function()
Color	raytrace-inlined.js	/^Flog.RayTracer.Color = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:63	type:Color function()
Engine	raytrace-inlined.js	/^Flog.RayTracer.Engine = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:588	type:Engine function()
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:178	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:199	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:263	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:281	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:304	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:338	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:363	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:399	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:449	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:503	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:526	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:570	type:any
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:585	type:Object
Flog	raytrace-inlined.js	/^if(typeof(Flog) == 'undefined') var Flog = {};$/;"	v	lineno:60	type:any
IntersectionInfo	raytrace-inlined.js	/^Flog.RayTracer.IntersectionInfo = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:506	type:IntersectionInfo function()
Light	raytrace-inlined.js	/^Flog.RayTracer.Light = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:181	type:Light function()
Plane	raytrace-inlined.js	/^Flog.RayTracer.Shape.Plane = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:453	type:Plane function()
Ray	raytrace-inlined.js	/^Flog.RayTracer.Ray = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:266	type:Ray function()
Scene	raytrace-inlined.js	/^Flog.RayTracer.Scene = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:284	type:Scene function()
Solid	raytrace-inlined.js	/^Flog.RayTracer.Material.Solid = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:341	type:Solid function()
Sphere	raytrace-inlined.js	/^Flog.RayTracer.Shape.Sphere = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:403	type:Sphere function()
Vector	raytrace-inlined.js	/^Flog.RayTracer.Vector = function() { this.initialize.apply(this, arguments); };$/;"	f	lineno:202	type:Vector function()
add	raytrace-inlined.js	/^    add : function(c1, c2){$/;"	f	lineno:80	type:Object function(Object, Object)
add	raytrace-inlined.js	/^    add : function(v, w) {$/;"	f	lineno:241	type:Object function(Object, Object)
addScalar	raytrace-inlined.js	/^    addScalar: function(c1, s){$/;"	f	lineno:90	type:Object function(Object, number)
blend	raytrace-inlined.js	/^    blend: function(c1, c2, w){$/;"	f	lineno:153	type:Object function(Object, Object, any)
brightness	raytrace-inlined.js	/^    brightness : function() {$/;"	f	lineno:162	type:number function()
checkNumber	raytrace-inlined.js	/^var checkNumber;$/;"	v	lineno:13	type:number
copy	raytrace-inlined.js	/^    copy: function(vector){$/;"	f	lineno:215	type:void function(any)
cross	raytrace-inlined.js	/^    cross : function(w) {$/;"	f	lineno:230	type:Object function(any)
distance	raytrace-inlined.js	/^    distance : function(color) {$/;"	f	lineno:148	type:number function(any)
divideFactor	raytrace-inlined.js	/^    divideFactor : function(c1, f) {$/;"	f	lineno:132	type:Object function(any, any)
dot	raytrace-inlined.js	/^    dot : function(w) {$/;"	f	lineno:237	type:number function(<null | Object>)
extend	raytrace-inlined.js	/^Object.extend = function(destination, source) {$/;"	f	lineno:28	type:Object function(Object, Object)
getColor	raytrace-inlined.js	/^        getColor: function(u, v){$/;"	f	lineno:353	type:any function(any, any)
getColor	raytrace-inlined.js	/^        getColor: function(u, v){$/;"	f	lineno:384	type:any function(any, any)
getColor	raytrace-inlined.js	/^    getColor: function(u, v){$/;"	f	lineno:322	type:void function(any, any)
getPixelColor	raytrace-inlined.js	/^    getPixelColor: function(ray, scene){$/;"	f	lineno:657	type:Object function(Object, Object)
getRay	raytrace-inlined.js	/^    getRay: function(vx, vy){$/;"	f	lineno:546	type:Object function(number, number)
getReflectionRay	raytrace-inlined.js	/^    getReflectionRay: function(P,N,V){$/;"	f	lineno:686	type:Object function(<null | Object>, <null | Object>, any)
initialize	raytrace-inlined.js	/^        initialize : function(color, reflection, refraction, transparency, gloss) {$/;"	f	lineno:345	type:void function(any, any, any, any, any)
initialize	raytrace-inlined.js	/^        initialize : function(colorEven, colorOdd, reflection, transparency, gloss, density) {$/;"	f	lineno:374	type:void function(any, any, any, any, any, any)
initialize	raytrace-inlined.js	/^    initialize : function() {$/;"	f	lineno:292	type:void function()
initialize	raytrace-inlined.js	/^    initialize : function() {$/;"	f	lineno:318	type:void function()
initialize	raytrace-inlined.js	/^    initialize : function() {$/;"	f	lineno:517	type:void function()
initialize	raytrace-inlined.js	/^    initialize : function(color, ambience) {$/;"	f	lineno:579	type:void function(any, any)
initialize	raytrace-inlined.js	/^    initialize : function(pos, color, intensity) {$/;"	f	lineno:188	type:void function(any, any, any)
initialize	raytrace-inlined.js	/^    initialize : function(pos, d, material) {$/;"	f	lineno:458	type:void function(any, any, any)
initialize	raytrace-inlined.js	/^    initialize : function(pos, dir) {$/;"	f	lineno:271	type:void function(any, any)
initialize	raytrace-inlined.js	/^    initialize : function(pos, lookAt, up) {$/;"	f	lineno:538	type:void function(any, any, any)
initialize	raytrace-inlined.js	/^    initialize : function(pos, radius, material) {$/;"	f	lineno:406	type:void function(any, any, any)
initialize	raytrace-inlined.js	/^    initialize : function(r, g, b) {$/;"	f	lineno:70	type:void function(any, any, any)
initialize	raytrace-inlined.js	/^    initialize : function(x, y, z) {$/;"	f	lineno:209	type:void function(any, any, any)
initialize	raytrace-inlined.js	/^    initialize: function(options){$/;"	f	lineno:593	type:void function(any)
intersect	raytrace-inlined.js	/^    intersect: function(ray){$/;"	f	lineno:412	type:Object function(Object)
intersect	raytrace-inlined.js	/^    intersect: function(ray){$/;"	f	lineno:464	type:Object function(Object)
limit	raytrace-inlined.js	/^    limit: function(){$/;"	f	lineno:142	type:void function()
magnitude	raytrace-inlined.js	/^    magnitude : function() {$/;"	f	lineno:226	type:number function()
multiply	raytrace-inlined.js	/^    multiply : function(c1, c2) {$/;"	f	lineno:112	type:Object function(Object, Object)
multiplyScalar	raytrace-inlined.js	/^    multiplyScalar : function(c1, f) {$/;"	f	lineno:122	type:Object function(Object, number)
multiplyScalar	raytrace-inlined.js	/^    multiplyScalar : function(v, w) {$/;"	f	lineno:254	type:Object function(<null | Object>, number)
multiplyVector	raytrace-inlined.js	/^    multiplyVector : function(v, w) {$/;"	f	lineno:250	type:Object function(any, any)
normalize	raytrace-inlined.js	/^    normalize : function() {$/;"	f	lineno:221	type:Object function()
rayTrace	raytrace-inlined.js	/^    rayTrace: function(info, ray, scene, depth){$/;"	f	lineno:695	type:Object function(Object, Object, Object, number)
renderScene	raytrace-inlined.js	/^    renderScene: function(scene, canvas){$/;"	f	lineno:628	type:void function(Object, null)
renderScene	raytrace-inlined.js	/^function renderScene(){$/;"	f	lineno:797	type:void function()
setPixel	raytrace-inlined.js	/^    setPixel: function(x, y, color){$/;"	f	lineno:612	type:void function(number, number, Object)
subtract	raytrace-inlined.js	/^    subtract : function(v, w) {$/;"	f	lineno:245	type:Object function(Object, <null | Object>)
subtract	raytrace-inlined.js	/^    subtract: function(c1, c2){$/;"	f	lineno:102	type:Object function(any, any)
testIntersection	raytrace-inlined.js	/^    testIntersection: function(ray, scene, exclude){$/;"	f	lineno:666	type:Object function(Object, Object, <null | Object>)
toString	raytrace-inlined.js	/^        toString : function () {$/;"	f	lineno:357	type:string function()
toString	raytrace-inlined.js	/^        toString : function () {$/;"	f	lineno:393	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:169	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:194	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:258	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:276	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:333	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:444	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:498	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:521	type:string function()
toString	raytrace-inlined.js	/^    toString : function () {$/;"	f	lineno:565	type:string function()
wrapUp	raytrace-inlined.js	/^    wrapUp: function(t){$/;"	f	lineno:326	type:number function(any)
